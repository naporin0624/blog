### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar Color

input CreatePostInput {
  body: String!
  private: Boolean
  publishedAt: Date
  tag: [Int!]
  thumbnail: Upload!
  title: String!
}

input CreateTagInput {
  color: Color!
  name: String!
}

"""Date custom scalar type"""
scalar Date

type Image {
  blur: String!
  id: Int!
  imageId: String!
  large: String!
  medium: String!
  small: String!
}

type Mutation {
  createPost(data: CreatePostInput!): Post!
  createTag(data: CreateTagInput!): Tag!
  deletePost(where: PostUniqueWhereInput!): Boolean!
  deleteTag(where: TagUniqueWhereInput!): Boolean
  publishPost(where: PostUniqueWhereInput!): Boolean!
  updatePost(data: UpdatePostInput!, where: PostUniqueWhereInput!): Post!
  updateTag(data: UpdateTagInput!, where: TagUniqueWhereInput!): Tag!
}

""""""
enum Order {
  asc
  desc
}

type Post {
  abstract: String!
  body: String!
  createdAt: Date!
  id: Int!
  private: Boolean!
  publishedAt: Date
  tags: [Tag!]
  thumbnail: Image!
  title: String!
  updatedAt: Date!
}

input PostOrderInput {
  publishedAt: Order
  title: Order
}

input PostUniqueWhereInput {
  id: Int!
}

input PostWhereInput {
  publishedAt: Date
  tag: String
  title: String
}

type Query {
  post(where: PostUniqueWhereInput): Post!
  posts(order: PostOrderInput = {publishedAt: desc}, where: PostWhereInput): [Post!]
  publishedPosts(order: PostOrderInput = {publishedAt: desc}, where: PostWhereInput): [Post!]
  tags(where: TagWhereInput): [Tag!]
}

type Tag {
  color: Color!
  id: Int!
  name: String!
  posts: [Post!]!
}

input TagUniqueWhereInput {
  id: Int!
}

input TagWhereInput {
  id: [Int!]
  name: [String!]
}

"""url"""
scalar URL

input UpdatePostInput {
  body: String
  private: Boolean
  publishedAt: Date
  tag: [Int!] = []
  thumbnail: Upload
  title: String
}

input UpdateTagInput {
  color: Color
  name: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload